# Version Increment Script
# Automatically increments version number for Biospheres

param(
    [ValidateSet("major", "minor", "patch")]
    [string]$IncrementType = "patch"
)

$ErrorActionPreference = "Stop"

$projectRoot = $PSScriptRoot
$versionFile = Join-Path $projectRoot "version.txt"
$versionHeaderFile = Join-Path $projectRoot "src\core\version.h"

# Read current version
if (-not (Test-Path $versionFile)) {
    Write-Host "Creating initial version file..." -ForegroundColor Yellow
    "1.0.0" | Out-File -FilePath $versionFile -Encoding ASCII -NoNewline
}

$currentVersion = Get-Content $versionFile -Raw
$currentVersion = $currentVersion.Trim()

# Parse version
if ($currentVersion -match '^(\d+)\.(\d+)\.(\d+)$') {
    $major = [int]$matches[1]
    $minor = [int]$matches[2]
    $patch = [int]$matches[3]
} else {
    Write-Host "ERROR: Invalid version format in version.txt" -ForegroundColor Red
    Write-Host "Expected format: MAJOR.MINOR.PATCH (e.g., 1.0.0)" -ForegroundColor Yellow
    exit 1
}

Write-Host "Current version: $currentVersion" -ForegroundColor Cyan

# Increment version based on type
switch ($IncrementType) {
    "major" {
        $major++
        $minor = 0
        $patch = 0
    }
    "minor" {
        $minor++
        $patch = 0
    }
    "patch" {
        $patch++
    }
}

$newVersion = "$major.$minor.$patch"
Write-Host "New version:     $newVersion" -ForegroundColor Green

# Determine if this is an alpha version (0.x.x)
$isAlpha = ($major -eq 0)
$fullVersion = if ($isAlpha) { "$newVersion-alpha" } else { $newVersion }
$isAlphaStr = if ($isAlpha) { "true" } else { "false" }

if ($isAlpha) {
    Write-Host "Status:          Early Alpha" -ForegroundColor Yellow
}

# Update version.txt
$newVersion | Out-File -FilePath $versionFile -Encoding ASCII -NoNewline

# Generate version.h
$versionHeader = @"
#pragma once

// Auto-generated version file
// Do not edit manually - this file is generated by increment_version.ps1

namespace Version
{
    constexpr int MAJOR = $major;
    constexpr int MINOR = $minor;
    constexpr int PATCH = $patch;
    constexpr const char* STRING = "$newVersion";
    constexpr const char* FULL_STRING = "$fullVersion";
    constexpr const char* BUILD_DATE = __DATE__;
    constexpr const char* BUILD_TIME = __TIME__;
    constexpr bool IS_ALPHA = $isAlphaStr;
}
"@

$versionHeader | Out-File -FilePath $versionHeaderFile -Encoding UTF8

Write-Host ""
Write-Host "âœ“ Version updated successfully!" -ForegroundColor Green
Write-Host "  version.txt: $newVersion" -ForegroundColor White
Write-Host "  version.h: Updated" -ForegroundColor White
