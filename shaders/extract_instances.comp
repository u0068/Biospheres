#version 430 core

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

// Input: Full cell data from physics simulation
layout(std430, binding = 0) buffer CellBuffer {
    // Cell structure: positionAndRadius, velocityAndMass, acceleration
    vec4 cellData[];
};

// Output: Compact instance data for rendering
layout(std430, binding = 1) buffer InstanceBuffer {
    vec4 instanceData[]; // Only position and radius
};

uniform int u_cellCount;

void main() {
    uint index = gl_GlobalInvocationID.x;
    
    if (index >= u_cellCount) return;
    
    // Extract position and radius (first vec4) from full cell data
    // Each cell has 3 vec4s: [posAndRadius, velAndMass, acceleration]
    // We only need the first one for rendering
    instanceData[index] = cellData[index * 3];
}
